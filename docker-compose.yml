version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: whatsapp-postgres
    environment:
      POSTGRES_DB: whatsapp_monitor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - whatsapp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database (alternative)
  # mongodb:
  #   image: mongo:7-jammy
  #   container_name: whatsapp-mongodb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: admin123
  #     MONGO_INITDB_DATABASE: whatsapp_monitor
  #   volumes:
  #     - mongodb_data:/data/db
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - whatsapp_network

  # Backend Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: whatsapp-backend-dev
    ports:
      - "3001:3001"
    volumes:
      - shared_data:/app/rss
      - shared_media:/app/media
      - shared_backups:/app/backups
      - whatsapp_session:/app/.wwebjs_auth
      - whatsapp_cache:/app/.wwebjs_cache
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_TYPE=postgresql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=whatsapp_monitor
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
    restart: unless-stopped
    networks:
      - whatsapp_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Rest of your services...
  selenium:
    build:
      context: ./selenium
      dockerfile: Dockerfile
    container_name: whatsapp-selenium-dev
    volumes:
      - shared_data:/app/rss
      - shared_media:/app/media
    environment:
      - DISPLAY=:99
      - DOCKER_ENV=true
    restart: unless-stopped
    networks:
      - whatsapp_network
    security_opt:
      - seccomp:unconfined
    shm_size: 2gb
    depends_on:
      backend:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: whatsapp-frontend-dev
    ports:
      - "8080:8080"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - whatsapp_network

volumes:
  shared_data:
    driver: local
  shared_media:
    driver: local
  shared_backups:
    driver: local
  whatsapp_session:
    driver: local
  whatsapp_cache:
    driver: local
  postgres_data:
    driver: local
  # mongodb_data:
  #   driver: local

networks:
  whatsapp_network:
    driver: bridge